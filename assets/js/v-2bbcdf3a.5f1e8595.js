"use strict";(self.webpackChunkshx_blog=self.webpackChunkshx_blog||[]).push([[82],{2198:(l,i,e)=>{e.r(i),e.d(i,{data:()=>a});const a={key:"v-2bbcdf3a",path:"/study/firstweek/fw1.html",title:"学习目标",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"学习收获",slug:"学习收获",children:[]},{level:2,title:"主要内容",slug:"主要内容",children:[]},{level:2,title:"关键词",slug:"关键词",children:[]},{level:2,title:"学习方法",slug:"学习方法",children:[]},{level:2,title:"注意事项",slug:"注意事项",children:[]}],filePathRelative:"study/firstweek/fw1.md",git:{updatedTime:1634900041e3,contributors:[{name:"shangxin",email:"1083732908@qq.com",commits:1}]}}},681:(l,i,e)=>{e.r(i),e.d(i,{default:()=>r});const a=(0,e(6252).uE)('<h1 id="学习目标" tabindex="-1"><a class="header-anchor" href="#学习目标" aria-hidden="true">#</a> 学习目标</h1><blockquote><p>需求分析和整体架构设计</p></blockquote><hr><h2 id="学习收获" tabindex="-1"><a class="header-anchor" href="#学习收获" aria-hidden="true">#</a> 学习收获</h2><ul><li>规范的产品研发流程</li><li>熟悉产品需求</li><li>学会以架构师的思维分析需求，理解需求</li><li>《整体技术方案设计》文档</li><li><strong>学会如何写技术方案设计</strong></li></ul><hr><h2 id="主要内容" tabindex="-1"><a class="header-anchor" href="#主要内容" aria-hidden="true">#</a> 主要内容</h2><ul><li>学习如何以架构师思维分析需求</li><li>由浅入深的需求分析</li><li>架构设计 - 多项目的关系</li><li><strong>核心数据结构设计</strong></li><li><strong>写《技术方案设计》文档</strong></li></ul><hr><h2 id="关键词" tabindex="-1"><a class="header-anchor" href="#关键词" aria-hidden="true">#</a> 关键词</h2><ul><li>流程图 - 分析需求的工具</li><li>全局思维、整体思维、闭环思维 - 架构师思维来分析需求</li><li>业务组件库 - 独立拆分出来，复用</li><li><strong>自定义事件统计</strong> - 业务的重要性，如何实现</li></ul><hr><h2 id="学习方法" tabindex="-1"><a class="header-anchor" href="#学习方法" aria-hidden="true">#</a> 学习方法</h2><ul><li>要有耐心，不要一心想着写代码，觉得需求和设计不重要</li><li>抛开你固有的程序员思维，开始准备接受架构师思维</li><li>要坚信：技术永远都是为业务服务的，技术是实现业务增长的工具</li></ul><hr><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h2><ul><li>不要关注细节，要看整体，看范围</li><li>设计时判断可行性，不确定的就调研一下（这需要大量的工作经验积累，技术能力）</li><li>设计要考虑复杂度，越简单越好，不要过度设计，不要为了设计而设计</li></ul>',17),r={render:function(l,i){return a}}}}]);