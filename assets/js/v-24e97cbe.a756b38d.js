"use strict";(self.webpackChunkshx_blog=self.webpackChunkshx_blog||[]).push([[894],{6008:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-24e97cbe",path:"/study/firstweek/fw3.html",title:"数据结构设计",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"数据流转",slug:"数据流转",children:[]}],filePathRelative:"study/firstweek/fw3.md",git:{updatedTime:1635772289e3,contributors:[{name:"shangxin",email:"1083732908@qq.com",commits:1}]}}},8103:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});const e=(0,a(6252).uE)('<h1 id="数据结构设计" tabindex="-1"><a class="header-anchor" href="#数据结构设计" aria-hidden="true">#</a> 数据结构设计</h1><p><img src="/images/data.jpeg" alt="原型图"> 根据产品图设置数据 vuex store 来同步数据 数据格式如下</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">{\n    // 作品\n    work: {\n        title: &#39;作品标题&#39;,\n        setting: { /* 一些可能的配置项，用不到就先预留 */ },\n        props: { /* 页面 body 的一些设置，如背景色 */ },\n        components: [\n            // components 要用数组，有序结构\n\n            // 单个 node 要符合常见的 vnode 格式\n            {\n                id: &#39;xxx&#39;, // 每个组件都有 id ，不重复\n                name: &#39;文本1&#39;,\n                tag: &#39;text&#39;,\n                attrs: { fontSize: &#39;20px&#39; },\n                children: [\n                    &#39;文本1&#39; // 文本内容，有时候放在 children ，有时候放在 attrs 或者 props ，没有标准，看实际情况来确定\n                ]\n            },\n            {\n                id: &#39;yyy&#39;,\n                name: &#39;图片1&#39;,\n                tag: &#39;image&#39;,\n                attrs: { src: &#39;xxx.png&#39;, width: &#39;100px&#39; },\n                children: null\n            },\n        ]\n    },\n\n    // 画布当前选中的组件\n    activeComponentId: &#39;xxx&#39;\n}\n\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>整体数据流共用一个数据库 <img src="/images/datastream.png" alt="数据流"></p><h2 id="数据流转" tabindex="-1"><a class="header-anchor" href="#数据流转" aria-hidden="true">#</a> 数据流转</h2><p>核心：B 端、C 端、管理后台，共用一个数据库。</p><ul><li>创建作品：初始化一个 JSON 数据</li><li>保存作品：修改 JSON 数据</li><li>发布作品：修改一个标记，仅此而已</li><li>C 端浏览作品：获取 JSON 数据，SSR 渲染页面</li><li>屏蔽作品：修改一个标记，C 端来判断</li><li>其中 C 端还有缓存，防止频繁访问数据库。</li></ul>',7),l={render:function(n,s){return e}}}}]);